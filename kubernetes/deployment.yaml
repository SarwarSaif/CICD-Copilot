apiVersion: apps/v1
kind: Deployment
metadata:
  name: mop-pipeline-frontend
  labels:
    app: mop-pipeline
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mop-pipeline
      tier: frontend
  template:
    metadata:
      labels:
        app: mop-pipeline
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: ${FRONTEND_IMAGE}
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        env:
        - name: API_URL
          value: "/api"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mop-pipeline-backend
  labels:
    app: mop-pipeline
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mop-pipeline
      tier: backend
  template:
    metadata:
      labels:
        app: mop-pipeline
        tier: backend
    spec:
      containers:
      - name: backend
        image: ${BACKEND_IMAGE}
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        env:
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mop-pipeline-secrets
              key: DJANGO_SECRET_KEY
        - name: DEBUG
          value: "False"
        - name: ALLOWED_HOSTS
          value: "*"
        - name: DJANGO_HOST
          value: "0.0.0.0"
        - name: DJANGO_PORT
          value: "8000"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: mop-pipeline-secrets
              key: OPENAI_API_KEY
        - name: PGDATABASE
          value: "moppipeline"
        - name: PGUSER
          value: "admin"
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: mop-pipeline-secrets
              key: POSTGRES_PASSWORD
        - name: PGHOST
          value: "postgres"
        - name: PGPORT
          value: "5432"
        readinessProbe:
          httpGet:
            path: /api/
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5